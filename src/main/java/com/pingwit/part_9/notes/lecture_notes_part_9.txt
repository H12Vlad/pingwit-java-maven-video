Equals, hashCode, записи (records), перечисления (enum)

## Переопределение методов

### Методы `equals` и `hashCode`

Методы `equals` и `hashCode` являются ключевыми при работе с объектами в Java, особенно при сравнении и использовании объектов в коллекциях.

#### Метод `equals`

Метод `equals` используется для сравнения двух объектов на равенство.
По умолчанию метод `equals` в классе `Object` сравнивает объекты по ссылке на память
(т.е., они равны только в том случае, если это один и тот же объект). Обычно его переопределяют для сравнения значений полей объектов.

Пример переопределения метода `equals` в классе `Person`:

```

public class Person {
    private String name;
    private int age;

    // конструктор, геттеры и сеттеры опущены для краткости
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Person person = (Person) o;
        return age == person.age && Objects.equals(name, person.name);
    }
}

```
#### Метод `hashCode`

Метод `hashCode` возвращает целочисленное значение (хеш-код), которое используется в хеш-таблицах,
таких как `HashMap`, для ускоренного поиска объектов.
 Хорошая реализация метода `hashCode` должна обеспечивать равномерное распределение хеш-кодов для разных объектов.

Пример переопределения метода `hashCode` в классе `Person`:

```

@Override

public int hashCode() {

    return Objects.hash(name, age);

}

```


### Записи (Records)

Записи (Records) — это новый тип данных, введенный в Java 14.
Они предназначены для представления данных (POJO - Plain Old Java Object) и автоматически предоставляют конструктор,
 геттеры, методы `equals`, `hashCode` и `toString`.

Пример определения записи (record) `Person`:

```

public record Person(String name, int age) {

    // Дополнительные поля или методы могут быть добавлены здесь

}

```

В записях Java автоматически генерируются следующие элементы:

- Конструктор, инициализирующий все final поля.

- Геттеры для всех полей.

- Переопределенные методы `equals` и `hashCode`, которые сравнивают объекты по значениям полей.

- Переопределенный метод `toString` для удобного вывода данных.

### Перечисления (Enum)

Перечисления (Enum) в Java представляют собой тип данных,
который состоит из фиксированного набора константных значений.
Они обеспечивают безопасное и удобное представление ограниченного набора значений.

Пример перечисления `DayOfWeek`:

```

public enum DayOfWeek {

    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY

}

```

Перечисления в Java могут содержать конструкторы, методы и поля,
что позволяет им быть более мощными инструментами, чем просто списки констант.

### Заключение

Переопределение методов `equals`, `hashCode`,
использование записей (records) и перечислений (enum) являются важными аспектами в Java,
 которые помогают обеспечить корректное сравнение объектов,
 удобное представление данных и безопасное использование константных значений.
 Эти концепции являются частью современного программирования
  на Java и способствуют написанию более эффективного и чистого кода.